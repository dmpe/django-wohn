debug = true
logLevel = "INFO"
InsecureSkipVerify = true
[global]
  sendAnonymousUsage = true

[entryPoints]
  [entryPoints.dashboard]
    address = ":9115"
  [entryPoints.web]
    address = ":80"
  [entryPoints.web-secure]
    address = ":443"

[http]
  # Add the router
  [http.routers]
    [http.routers.router0]
      entryPoints = ["dashboard"]
      middlewares = ["my-basic-auth"]
      service = "melive"
      rule = "Host(`monitor.melive.xyz`)"

    [http.routers.router0.tls]
      options = "acme"
      [[http.routers.router0.tls.domains]]
          main = "*.melive.xyz"
    # Add the middleware
    [http.middlewares]
      [http.middlewares.my-basic-auth.basicAuth]
        users = ["admin:$$apr1$$IBa8vpEo$$T7M3PWdYfMIkQhn2MAI6n1"]

    # Add the service
    [http.services]
      [http.services.melive]
        [http.services.melive.loadBalancer]
          [[http.services.melive.loadBalancer.servers]]
            url = "http://127.0.0.1:9115/"

[tls.options]
  [tls.options.acme]
    minVersion = "VersionTLS12"
    cipherSuites = [
      "TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256",
      "TLS_RSA_WITH_AES_256_GCM_SHA384"
    ]


[api]
dashboard=true
debug=true

[certificatesResolvers.myhttpchallenge.acme]
email = "cincenko@outlook.com"
storage = "acme/certs.json"
entryPoint = "https"
caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"
onHostRule = true
  [certificatesResolvers.myhttpchallenge.acme.dnsChallenge]
  resolvers = ["1.1.1.1:53", "8.8.8.8:53"]
  provider = "ovh"
  delayBeforeCheck = 10

[[acme.domains]]
  main = "*.melive.xyz"

[certificatesResolvers]
  [certificatesResolvers.myhttpchallenge]
    [certificatesResolvers.myhttpchallenge.acme]
      email = "cincenko@outlook.com"
      caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"
      storage = "acme.json"
      [certificatesResolvers.myhttpchallenge.acme.dnsChallenge]
        provider = "ovh"
        delayBeforeCheck = 10
        resolvers = ["1.1.1.1:53", "8.8.8.8:53"]

[providers.docker]
  endpoint = "unix:///var/run/docker.sock"
  domain = "melive.xyz"
  watch = true
  exposedByDefault = true