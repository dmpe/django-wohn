# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

variables:
  quayId: dmpe
  dockerId: f789gh
  imageName: django-wohn
  imageNameB: django-wohn-backend
  imageNameF: django-wohn-frontend
  major: 1
  minor: $[counter(variables['major'], 3)]

# test all commits in Pull Re. which target master
trigger:
- master
- pr

stages:
- stage: Preparations
  displayName: Prepare all the tasks that are needed for later use
  jobs:
    - job: BuildJob
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - task: Docker@2
        displayName: "Docker login"
        inputs:
          containerRegistry: 'docker_hub'
          command: 'login'

      - task: Docker@2
        displayName: "Docker login"
        inputs:
          containerRegistry: 'quay.io'
          command: 'login'

      - task: AzureKeyVault@1
        inputs:
          azureSubscription: 'DjangoAzure'
          KeyVaultName: 'b40'
          SecretsFilter: '*'
# https://github.com/microsoft/azure-pipelines-tasks/blob/master/Tasks/AzureKeyVaultV1/README.md


- stage: Backend
  displayName: Prepare Backend Docker Build and push to DockerHub
  jobs:
    - job: BuildJob
      pool:
        vmImage: 'ubuntu-latest'
      steps:

      - task: Docker@2
        displayName: "Build our Image now"
        inputs:
          containerRegistry: 'docker_hub'
          repository: $(dockerId)/$(imageName)
          command: 'build'
          Dockerfile: 'backend/Dockerfile'
          tags: |
            $(major).$(minor)
            latest

      - task: Docker@2
        displayName: "Push to Docker Hub"
        # only push on master branch, i.e. when PR is merged
        # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          containerRegistry: 'docker_hub'
          repository: '$(dockerId)/$(imageName)'
          command: 'push'
          tags: |
            $(major).$(minor)
            latest

- stage: Frontend
  displayName: Prepare Frontend Docker Build and push to DockerHub
  jobs:
    - job: BuildJob
      pool:
        vmImage: 'ubuntu-latest'
      steps:

      - task: Docker@2
        displayName: "Build our Image now"
        inputs:
          containerRegistry: 'docker_hub'
          repository: $(quayId)/$(imageNameF)
          command: 'build'
          Dockerfile: 'frontend/Dockerfile'
          tags: |
            $(major).$(minor)
            latest

      - task: Docker@2
        displayName: "Push to Docker Hub"
        # only push on master branch, i.e. when PR is merged
        # condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
        inputs:
          containerRegistry: 'docker_hub'
          repository: '$(quayId)/$(imageNameF)'
          command: 'push'
          tags: |
            $(major).$(minor)
            latest

- stage: SendToSonarQube
  displayName: Run SonarQube scannerMode
  jobs:
    - job: ScanJob
      pool:
        vmImage: 'ubuntu-latest'
      steps:
      - task: SonarCloudPrepare@1
        displayName: "Connect to SonarCloud"
        inputs:
          SonarCloud: 'SonarCloud'
          organization: 'dmpe-github'
          scannerMode: 'CLI'
          configMode: 'file'

      - task: SonarCloudAnalyze@1

      - task: SonarCloudPublish@1
        inputs:
          pollingTimeoutSec: '300'
# TODO: take picture from output and commit it to docs directory
