# Generated by Django 2.2.5 on 2019-10-13 18:31

import core.mics
import core.models
from django.conf import settings
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import phonenumber_field.modelfields
import timezone_field.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='myUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_gender', models.CharField(choices=[('M', 'Mr.'), ('F', 'Mrs. or Miss'), ('O', 'Other or prefer not to say')], default='O', max_length=1, null=True)),
                ('user_int_tel', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region=None)),
                ('user_timezone', timezone_field.fields.TimeZoneField(default='Europe/Prague')),
                ('user_country', django_countries.fields.CountryField(default='CZ', max_length=2)),
                ('user_profile_image', models.ImageField(blank=True, null=True, upload_to=core.mics.upload_profile_image)),
                ('user_units_system', models.CharField(choices=[('Imperial', 'Imperial'), ('Metric', 'Metric')], default='Metric', max_length=10, null=True)),
                ('user_first_lastname_visibility', models.CharField(choices=[('VFN', 'First name'), ('VLN', 'Last name')], default='VFN', max_length=3, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'unique_together': {('email',)},
            },
            managers=[
                ('objects', core.models.MyUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='ExchangeRate',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('today', models.DateField(auto_now_add=True, verbose_name="Today's Date")),
                ('OneEurCzk', models.DecimalField(decimal_places=3, max_digits=7, verbose_name='1 EUR - CZK')),
                ('OneEurUsd', models.DecimalField(decimal_places=3, max_digits=7, verbose_name='1 EUR - USD')),
                ('OneUsdCzk', models.DecimalField(decimal_places=3, max_digits=7, verbose_name='1 USD - CZK')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_created', models.DateTimeField(auto_now_add=True)),
                ('property_rooms', models.IntegerField()),
                ('property_size_in_sq_meters', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_size_in_sq_foot', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_price_in_eur', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_price_in_czk', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_price_in_usd', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_offered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Rooms',
            },
        ),
        migrations.CreateModel(
            name='House',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_created', models.DateTimeField(auto_now_add=True)),
                ('property_rooms', models.IntegerField()),
                ('property_size_in_sq_meters', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_size_in_sq_foot', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_price_in_eur', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_price_in_czk', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_price_in_usd', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('house_garden_size_in_sq_meters', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_offered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Houses',
            },
        ),
        migrations.CreateModel(
            name='Apartment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('property_created', models.DateTimeField(auto_now_add=True)),
                ('property_rooms', models.IntegerField()),
                ('property_size_in_sq_meters', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_size_in_sq_foot', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_price_in_eur', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_price_in_czk', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_price_in_usd', models.DecimalField(blank=True, decimal_places=2, max_digits=7, null=True)),
                ('property_offered_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Apartments',
            },
        ),
    ]
