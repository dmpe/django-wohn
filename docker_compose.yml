version: '3.7'

# https://hub.docker.com/_/nginx
# https://tomlankhorst.nl/secure-nginx-docker-container-with-lets-encrypt/
# https://api.ovh.com/console/#/auth/credential#POST
services:
    traefik:
        image: traefik:latest
        command: --api --docker
        container_name: traefik
        ports:
          - "0.0.0.0:80:80"
          - "0.0.0.0:443:443"
          - "9116:8080"
        restart: always
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ./services/containers/traefik/traefik.toml:/traefik.toml
          - ./services/containers/traefik:/acme
        labels:
          - "traefik.enable=true"
          - "traefik.backend=traefik"
          - "traefik.port=9116"
          - "traefik.frontend.rule=Host:monitor.melive.xyz,www.monitor.melive.xyz"
        environment:
          - "OVH_ENDPOINT=ovh-eu"
          - "OVH_APPLICATION_KEY=w9tkF8kh3waFE01d"
          - "OVH_APPLICATION_SECRET=GIUVTjgdkAUCxK40sAtniEAeJc67GXP1"
          - "OVH_CONSUMER_KEY=Vo5S0YOYF5lO5HukxIOeqgbP6tKHV3OH"

    # nginx:
    #     image: nginx:latest
    #     container_name: nginx
    #     volumes:
    #       - ./server_config/services/nginx/nginx.conf:/etc/nginx/nginx.conf
    #       - ./server_config/domain/acme-webroot:/usr/share/nginx/html
    #     ports:
    #       - 8000:80
          # networks:
          #   - default
          #   - traefik_proxy
    #     depends_on:
    #       - djangoWohn

    djangoWohn:
        image: f789gh/django-wohn:latest
        container_name: djangoWohn
        volumes:
          - datadrive_django:/work
        restart: always
        ports:
          - 8123:8123
        depends_on:
          - postgres
          - pgadmin
        #  - rabbit
        networks:
          - default
          - traefik_proxy
        labels:
         - "traefik.enable=true"
         - "traefik.backend=djangoWohn"
         - "traefik.port=8123"
         - "traefik.frontend.rule=Host:melive.xyz,www.melive.xyz"

# https://hub.docker.com/_/postgres
    postgres:
        image: postgres:11
        container_name: postgres
        volumes:
          - datadrive_postgress:/var/lib/postgresql/data
        restart: always
        ports:
          - 5432:5432
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=django
          - POSTGRES_DB=b40re
        networks:
          - default
        labels:
          - "traefik.enable=false"
          - "traefik.backend=postgres"
          - "traefik.port=5432"

# https://hub.docker.com/r/dpage/pgadmin4/
    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: pgadmin4
        environment:
          - PGADMIN_DEFAULT_EMAIL=cincenko@outlook.com
          - PGADMIN_DEFAULT_PASSWORD=123456
          - PGADMIN_LISTEN_PORT=5050
        ports:
          - 5050:5050
        restart: always
        depends_on:
          - postgres
        networks:
          - default
          - traefik_proxy
        volumes:
          - datadrive_pgadmin:/var/lib/pgadmin
          - ./services/containers/pgadmin/pgadmin_config_local.py:/var/lib/pgadmin/config_local.py
        labels:
          - "traefik.enable=true"
          - "traefik.backend=pgadmin"
          - "traefik.port=5050"
          - "traefik.frontend.rule=Host:pgadmin.melive.xyz,www.pgadmin.melive.xyz"

    watchtower:
        image: containrrr/watchtower:latest
        container_name: watchtower
        restart: always
        ports:
          - 7884:7884
        environment:
          - WATCHTOWER_CLEANUP=true
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ~/.docker/config.json:/config.json
        command: --interval 60
        labels:
          - "traefik.enable=false"
          - "traefik.backend=watchtower"
          - "traefik.port=7884"

    rabbit:
        hostname: rabbit
        container_name: rabbit
        image: rabbitmq:3-management
        environment:
          - RABBITMQ_DEFAULT_USER=admin
          - RABBITMQ_DEFAULT_PASS=123456
        ports:
          - "5672:5672"    # we forward this port because it's useful for debugging
          - "15672:15672"  # here, we can access rabbitmq management plugin
        networks:
          - default
          - traefik_proxy
        volumes:
          - datadrive_rabbit:/data
        labels:
          - "traefik.enable=true"
          - "traefik.backend=rabbit"
          - "traefik.port=5672"
          # add a segment label for 2nd port
          - "traefik.mngm.backend=rabbit-management"
          - "traefik.mngm.port=15672"
          - "traefik.mngm.frontend.rule=Host:rabbit.melive.xyz,www.rabbit.melive.xyz"

    portainer:
        image: portainer/portainer:latest
        container_name: portainer
        restart: always
        ports:
          - "9000:9000"
          - "8000:8000"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - datadrive_portainer:/data
        networks:
          - default
          - traefik_proxy
        labels:
          - "traefik.enable=true"
          - "traefik.backend=portainer"
          - "traefik.port=9000"
          - "traefik.frontend.rule=Host:portainer.melive.xyz,www.portainer.melive.xyz"

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge

volumes:
  datadrive_postgress:
    external: true
  datadrive_portainer:
    external: true
  datadrive_pgadmin:
    external: true
  datadrive_django:
    external: true
  datadrive_rabbit:
    external: true