version: "3"

# https://hub.docker.com/_/nginx
# https://tomlankhorst.nl/secure-nginx-docker-container-with-lets-encrypt/
# https://api.ovh.com/console/#/auth/credential#POST
services:
    nginx: 
        image: nginx:latest
        container_name: nginx
        volumes:
          - /server_config/services/nginx/nginx.conf:/etc/nginx/nginx.conf
          - /server_config/domain/acme-webroot:/usr/share/nginx/html
        ports:
          - 80:80
          - 443:443
        networks:
          - traefik_proxy

    django_web:
      image: f789gh/django-wohn:latest
      container_name: django_web
      volumes:
        - /data/django_web:/work
      ports:
        - 80:8000
      depends_on:
        - nginx
        - postgres
        - pgadmin
      #  - rabbit
      networks:
        - traefik_proxy

# https://hub.docker.com/_/postgres
    postgres:
        image: postgres:11
        container_name: postgres
        volumes:
          - /data/postgres:/var/lib/postgresql/data
        ports:
          - 5432:5432
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=django
          - POSTGRES_DB=b40re
        networks:
          - default

# https://hub.docker.com/r/dpage/pgadmin4/      
    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: pgadmin4
        environment:
          - PGADMIN_DEFAULT_EMAIL=cincenko@outlook.com
          - PGADMIN_DEFAULT_PASSWORD=123456
          - PGADMIN_LISTEN_PORT=5050
        #      - PGADMIN_ENABLE_TLS=False
        ports:
          - 5050:5050
        depends_on:
          - postgres
        networks:
          - default
          - traefik_proxy
        volumes:
          - /data/pgadmin:/var/lib/pgadmin
          - /data/pgadmin:/var/log/pgadmin
          - ../server_config/services/pgadmin_config_local.py:/var/lib/pgadmin/config_local.py

    watchtower:
        image: containrrr/watchtower:latest
        container_name: watchtower
        environment: 
          - WATCHTOWER_CLEANUP=true
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ~/.docker/config.json:/config.json
        command: --interval 60

  # rabbit:
  #   container_name: rabbit
  #   image: rabbitmq:latest
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=admin
  #     - RABBITMQ_DEFAULT_PASS=mypass
  #   ports:
  #     - "5672:5672"    # we forward this port because it's useful for debugging
  #     - "15672:15672"  # here, we can access rabbitmq management plugin
  #   networks:
  #     - docker-network

    portainer:
        image: portainer/portainer:latest
        container_name: portainer
        command: -H unix:///var/run/docker.sock
        restart: always
        ports:
          - 9000:9000
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - /data/portainer_data:/data
        networks:
          - default
          - traefik_proxy

networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge

volumes:
  data:
    driver: local
    driver_opts:
      type: none
      o: bind 
      device: /datadrive