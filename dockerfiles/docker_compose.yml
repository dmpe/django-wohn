version: "3"

# https://hub.docker.com/_/nginx
# https://tomlankhorst.nl/secure-nginx-docker-container-with-lets-encrypt/
# https://api.ovh.com/console/#/auth/credential#POST
services:
    proxy:
        image: traefik:latest
        container_name: proxy
        restart: always
        ports:
          - "80:80"
          - "443:443"
          - "8080:8080"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ../server_config/services/traefik/traefik.toml:/traefik.toml
          - ../server_config/services/traefik/acme.json:/acme.json
        environment:
          - OVH_ENDPOINT=ovh-eu
          - OVH_APPLICATION_KEY=Ii7zr75vRbivjRvo
          - OVH_APPLICATION_SECRET=XLl2pBxADunF2P7dB5KrqAwFCdyZPU7c
          - OVH_CONSUMER_KEY=t7QDWHWrONPxfrp0weAFK7lRX2TEVT6h
        labels:
          - "traefik.enable=true"
          - "traefik.frontend.rule=Host:monitor.melive.xyz"
          - "traefik.backend=proxy"
          - "traefik.port=8080"

    nginx: 
        image: nginx:latest
        container_name: nginx
        volumes:
          - ../server_config/services/nginx/nginx.conf:/etc/nginx/nginx.conf
          - ../server_config/domain/acme-webroot:/usr/share/nginx/html
        #  - ../server_config/domain/certs:/etc/nginx/ssl/melive.xyz
        #ports:
        #  - 80:80
        #  - 443:443
        networks:
          - docker-network
        labels:
          - "traefik.backend=nginx"
          - "traefik.enable=true"
          - "traefik.frontend.rule=Host:www.melive.xyz"
          - "traefik.port=80"

# https://hub.docker.com/_/postgres
    postgres:
        image: postgres:11
        container_name: postgres
        volumes:
          - /data/postgres:/var/lib/postgresql/data
        ports:
          - 5432:5432
        environment:
          - POSTGRES_USER=postgres
          - POSTGRES_PASSWORD=django
          - POSTGRES_DB=b40re
        networks:
          - docker-network
        labels:
          - traefik.enable=false

# https://hub.docker.com/r/dpage/pgadmin4/      
    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: pgadmin4
        environment:
          - PGADMIN_DEFAULT_EMAIL=cincenko@outlook.com
          - PGADMIN_DEFAULT_PASSWORD=123456
          - PGADMIN_LISTEN_PORT=5050
        #      - PGADMIN_ENABLE_TLS=False
        ports:
          - 5050:5050
        depends_on:
          - postgres
        networks:
          - docker-network
        volumes:
          - /data/pgadmin:/var/lib/pgadmin
          - /data/pgadmin:/var/log/pgadmin
          - ../server_config/services/pgadmin_config_local.py:/var/lib/pgadmin/config_local.py
        labels:
          - "traefik.enable=true"
          - "traefik.basic.frontend.rule=Host:pgadmin.melive.xyz"
          - "traefik.basic.port=5050"
          - "traefik.backend=pgadmin"

  # rabbit:
  #   container_name: rabbit
  #   image: rabbitmq:latest
  #   environment:
  #     - RABBITMQ_DEFAULT_USER=admin
  #     - RABBITMQ_DEFAULT_PASS=mypass
  #   ports:
  #     - "5672:5672"    # we forward this port because it's useful for debugging
  #     - "15672:15672"  # here, we can access rabbitmq management plugin
  #   networks:
  #     - docker-network

    watchtower:
      image: containrrr/watchtower:latest
      container_name: watchtower
      environment: 
        - WATCHTOWER_CLEANUP=true
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
        - ~/.docker/config.json:/config.json
      command: --interval 60
      networks:
        - docker-network


  # django_web:
  #   build:
  #     context: .
  #     dockerfile: Dockerfile
  #   volumes:
  #     - .:/work
  #   ports:
  #     - 80:8000
  #   depends_on:
  #     - nginx
  #     - postgres
  #     - pgadmin
  #   #  - rabbit
  #   networks:
  #     - docker-network

networks:
  docker-network:
    driver: bridge

volumes:
  data:
    driver: local
    driver_opts:
      type: none
      o: bind 
      device: /datadrive